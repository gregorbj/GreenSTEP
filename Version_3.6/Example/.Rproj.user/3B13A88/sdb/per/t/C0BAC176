{
    "collab_server" : "",
    "contents" : "#=======================\n#GreenSTEP_Sim_Outputs.r\n#=======================\n#Copyright 2009 - 2015, Oregon Department of Transportation\n#Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n#http://www.apache.org/licenses/LICENSE-2.0\n#Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.\n#Version: 3.5 Beta\n#Date: 5/24/15\n\n#Iterate through all years\n#=========================\n\nfor( yr in RunYears ) {\n  \n  print( paste(yr, \" outputs running\") )\n  print( Sys.time() )\n  \n  OutputYearDir <- paste0(OutputDir, \"/Year\", yr)\n  \n  #Make objects to store results\n  #=============================\n  \n  Hh_ <- list()\n  \n  # Define density groupings (other groupings are already defined\n  Dg <- c( \"0-999\", \"1000-2499\", \"2500-4999\", \"5000-7499\", \"7500-9999\", \"10000-14999\",\n           \"15000-19999\", \"20000-24999\", \"25000-30000\", \"30000+\" )\n  \n  # Define urban mixed use designation ( Yes:\"1\", No: \"0\" )\n  Mx <- c( \"0\", \"1\" )\n  \n  # Define vehicle types\n  Ty <- c( \"LtVeh\", \"Truck\", \"Bus\" )\n  \n  # Define light vehicle types\n  Vt <- c( \"Auto\", \"LtTruck\" )\n  \n  # Define age group\n  Ag <- as.factor( as.character(0:32) )\n  \n  # Define powertrain types\n  Pt <- c( \"Ice\", \"Hev\", \"Phev\", \"Ev\" )\n  \n  # Set up dimensions for arrays by county, income group and development type\n  OutputDims. <- c( length( Co ), length( Ig ), length( Dt ), length( Dg ) )\n  OutputDimnames_ <- list( Co, Ig, Dt, Dg ) \n  \n  # Initialize arrays by county, income group, development type, and density group\n  #-------------------------------------------------------------------------\n  \n  # Arrays that tabulate household characteristics\n  Hh_$Pop.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$Pop.CoDtDgMx <- array( 0, dim=c( length(Co), length(Dt), length(Dg), length(Mx)),\n                             dimnames=list(Co,Dt,Dg,Mx) )\n  Hh_$Hh.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$UrbanHh.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$DrvAgePop.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$Dvmt.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$LtVehDvmt.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$LtWtVehDvmt.CoDtDgMx <- array( 0, dim=c( length(Co), length(Dt), length(Dg), length(Mx)),\n                                     dimnames=list(Co,Dt,Dg,Mx) )\n  Hh_$HhOpCost.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$HhExtCost.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$HhVehOwnCost.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$HhParkingCost.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$HhInc.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$HhCo2e.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$AveDensity.CoDg <- array( 0, dim=c( length(Co), length(Dg)), dimnames=list(Co,Dg) )\n  Hh_$AveDensity.CoDtDg <- array( 0, dim=c( length(Co), length(Dt), length(Dg) ), dimnames=list(Co,Dt,Dg) )\n  Hh_$MetroAreaDensity.CoDg <- array( 0, dim=c( length(Co), length(Dg)), dimnames=list(Co,Dg) )\n  Hh_$WalkTrips.CoDtDgMx <- array( 0, dim=c( length(Co), length(Dt), length(Dg), length(Mx)), \n                                   dimnames=list(Co,Dt,Dg,Mx) )\n  Hh_$BikeTrips.CoDtDgMx <- array( 0, dim=c( length(Co), length(Dt), length(Dg), length(Mx)), \n                                   dimnames=list(Co,Dt,Dg,Mx) )\n  Hh_$TransitTrips.CoDtDgMx <- array( 0, dim=c( length(Co), length(Dt), length(Dg), length(Mx)), \n                                      dimnames=list(Co,Dt,Dg,Mx) )\n  Hh_$FuelGallons.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$ElecKwh.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$FuelCo2e.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$ElecCo2e.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )          \n  Hh_$CarshareHh.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$MedianInc.Co <- numeric( length( Co ) ); names( Hh_$MedianInc.Co ) <- Co\n  Hh_$MedianInc.CoDt <- array( 0, dim=c( length(Co), length(Dt) ), dimnames=list( Co, Dt ) )\n  \n  # Arrays that tabulate light vehicle characteristics\n  Hh_$AveAutoVehAge.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$AveLtTruckVehAge.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$NumAuto.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$NumLtTruck.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$AutoEvDvmt.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$LtTruckEvDvmt.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$AutoHcDvmt.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$LtTruckHcDvmt.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$AutoFuel.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$LtTruckFuel.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$AutoPower.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$LtTruckPower.CoIgDtDg <- array( 0, dim=OutputDims., dimnames=OutputDimnames_ )\n  Hh_$AutoAge.CoAg <- array( 0, dim=c( length(Co), length(Ag) ), dimnames=list( Co, Ag ) )\n  Hh_$LtTruckAge.CoAg <- array( 0, dim=c( length(Co), length(Ag) ), dimnames=list( Co, Ag ) )\n  Hh_$NumPowertrain.CoDtDgPt <- array( 0, dim=c( length(Co), length(Dt), length(Dg), length(Pt) ),\n                                       dimnames=list( Co, Dt, Dg, Pt ) ) \n  Hh_$NumPowertrain.CoVtAgPt <- array( 0, dim=c( length(Co), length(Vt), length(Ag), length(Pt) ),\n                                       dimnames=list( Co, Vt, Ag, Pt ) ) \n  Hh_$HcDvmt.CoDtDgPt <- array( 0, dim=c( length(Co), length(Dt), length(Dg), length(Pt) ),\n                                dimnames=list( Co, Dt, Dg, Pt ) ) \n  Hh_$EvDvmt.CoDtDgPt <- array( 0, dim=c( length(Co), length(Dt), length(Dg), length(Pt) ),\n                                dimnames=list( Co, Dt, Dg, Pt ) ) \n  Hh_$Fuel.CoDtDgPt <- array( 0, dim=c( length(Co), length(Dt), length(Dg), length(Pt) ),\n                              dimnames=list( Co, Dt, Dg, Pt ) )\n  Hh_$NumPowertrain.CoVtPt <- Hh_$HcDvmt.CoVtPt <- Hh_$EvDvmt.CoVtPt <- Hh_$Fuel.CoVtPt <- \n    array( 0, dim=c( length(Co), length(Vt), length(Pt) ), dimnames=list( Co, Vt, Pt ) )\n  Hh_$HcVehDvmt.CoAgVt <- Hh_$HcVehCo2e.CoAgVt <- Hh_$EvVehDvmt.CoAgVt <- Hh_$EvVehCo2e.CoAgVt <- \n    array( 0, dim=c( length(Co), length(Ag), length(Vt) ), dimnames=list( Co, Ag, Vt ) )\n  \n  #Add cost summary and other saved table\n  #--------------------------------------\n  TableNames. <- c( \"CostSummary.CoVa\", \"Dvmt.CoDt\", \"Inc.CoDt\",  \"Pop.CoDt\" )\n  for( tn in TableNames. ) {\n    TableFile <- paste( OutputYearDir, \"/\", tn, \".RData\", sep=\"\" )\n    Hh_[[tn]] <- assignLoad( TableFile )\n  }\n  rm( TableNames. )\n  Hh_$AveFuelCo2e. <- assignLoad(paste0(OutputYearDir, \"/AveFuelCo2e.RData\"))\n  Hh_$AveElectricCo2e.Co <- assignLoad(paste0(OutputYearDir, \"/AveElectricCo2e.Co.RData\"))\n  \n  #Collect other data that was saved at run time into lists\n  #========================================================\n  \n  #Save the metropolitan area congestion and other data\n  Metropolitan_ <- list()\n  TableNames. <- c( \"ArtLnMiCap.Ma\", \"AveCongTaxPerMi.Ma\", \"AveSpeed.MaTy\", \"BusHcCo2e.Ma\",\n                    \"BusFuel.MaFt\", \"BusRevMi.Ma\", \"CommVehDvmt.Ma\", \"CongVmt.ClFcTyMa\",\n                    \"DelayVehHr.MaTy\", \"Dvmt.MaTy\", \"FfVehHr.MaTy\", \"FwyLnMiCap.Ma\", \n                    \"MpgMpkwhAdj.MaPt\", \"RailBusEvCo2e.Ma\", \"RailBusPower.Ma\", \"RailRevMi.Ma\",\n                    \"TranRevMiCap.Ma\", \"TruckCo2e.Ma\", \"TruckFuel.MaFt\", \"VehHr.MaTy\", \n                    \"NonMpoTruckDvmt\", \"NonMpoTruckFuel.Ft\", \"NonMpoTruckCo2e\" )\n  for( tn in TableNames. ) {\n    TableFile <- paste( OutputYearDir, \"/\", tn, \".RData\", sep=\"\" )\n    Metropolitan_[[tn]] <- assignLoad( TableFile )\n  }\n  rm( TableNames. )\n  \n  #Iterate through counties (districts) and make summary tables\n  #============================================================\n  \n  for( co in Co ) { local( {\n    \n    # Load county files\n    Filename <- paste( OutputYearDir, \"/\", co, \".RData\", sep=\"\" )\n    SynPop.. <- assignLoad( Filename )\n    SynPop..$DevType <- factor( SynPop..$DevType, levels=c(\"Metropolitan\", \"Town\", \"Rural\") )\n    SynPop..$Urban <- factor( as.character( SynPop..$Urban ), levels=c( \"0\", \"1\" ) )\n    \n    # Calculate average densities\n    #============================\n    \n    # Classify density group of each household\n    DgCut <- c( 0, 1000, 2500, 5000, 7500, 10000, 15000, 20000, 25000, 30000, max(SynPop..$Htppopdn) )\n    DenGroup. <- cut( SynPop..$Htppopdn, DgCut, right=FALSE, labels=Dg )   \t\t\t\t\n    \n    # Compute the average density by density-group \n    Density.Dg <- tapply( SynPop..$Htppopdn, DenGroup., mean)[Dg]\n    Density.Dg[ is.na( Density.Dg ) ] <- 0\n    Hh_$AveDensity.CoDg[ co, ] <<- Density.Dg\n    #Hh_$AveDensity.CoDg[ co, ] <- Density.Dg\n    \n    # Compute average density by density-group and development type\n    Density.DtDg <- tapply( SynPop..$Htppopdn, list( SynPop..$DevType, DenGroup. ), mean )[Dt,Dg]\n    Density.DtDg[ is.na( Density.DtDg ) ] <- 0\n    Hh_$AveDensity.CoDtDg[ co, , ] <<- Density.DtDg  \n    #Hh_$AveDensity.CoDtDg[ co, , ] <- Density.DtDg  \n    \n    # Compute the metro-area density by density-group\n    Hh_$MetroAreaDensity.CoDg[ co, ] <<- Density.DtDg[ \"Metropolitan\", ]\n    #Hh_$MetroAreaDensity.CoDg[ co, ] <- Density.DtDg[ \"Metropolitan\", ]\n    \n    # Tabulate household characteristics\n    #===================================\n    \n    # Household population\n    Pop.Hh <- SynPop..$Hhsize\n    Pop.3d <- tapply( Pop.Hh, list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ),\n                      function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    Pop.3d[ is.na( Pop.3d ) ] <- 0\n    Hh_$Pop.CoIgDtDg[ co, , , ] <<- Pop.3d\n    #Hh_$Pop.CoIgDtDg[ co, , , ] <- Pop.3d\n    \n    # Household population by density group and urban mixed use designation\n    Pop.3d <- tapply( Pop.Hh, list( SynPop..$DevType, DenGroup., SynPop..$Urban ),\n                      function(x) sum( x, na.rm=TRUE ) )[Dt,Dg,Mx]\n    Pop.3d[ is.na( Pop.3d ) ] <- 0\n    Hh_$Pop.CoDtDgMx[ co, , , ] <<- Pop.3d\n    #Hh_$Pop.CoDtDgMx[ co, , , ] <- Pop.3d\n    \n    # Number of households\n    Tab1.3d <- table( SynPop..$IncGrp, SynPop..$DevType, DenGroup. )[Ig,Dt,Dg]\n    Hh_$Hh.CoIgDtDg[ co, , , ] <<- Tab1.3d\n    #Hh_$Hh.CoIgDtDg[ co, , , ] <- Tab1.3d\n    \n    # Number of Urban households              \n    Tab1.3d <- tapply( as.numeric( as.character( SynPop..$Urban ) ), \n                       list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), sum )[Ig,Dt,Dg]\n    Tab1.3d[ is.na( Tab1.3d ) ] <- 0\n    Hh_$UrbanHh.CoIgDtDg[ co, , , ] <<- Tab1.3d\t\t\t\t\t   \n    #Hh_$UrbanHh.CoIgDtDg[ co, , , ] <- Tab1.3d\t\t\t\t\t   \n    \n    # Driver age population\n    VehHhDrvPop.3d <- tapply( SynPop..$DrvAgePop, \n                              list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                              function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    VehHhDrvPop.3d[ is.na( VehHhDrvPop.3d ) ] <- 0\n    Hh_$DrvAgePop.CoIgDtDg[ co, , , ] <<- VehHhDrvPop.3d\n    #Hh_$DrvAgePop.CoIgDtDg[ co, , , ] <- VehHhDrvPop.3d\n    \n    # Dvmt \n    Dvmt.3d <- tapply( SynPop..$Dvmt, \n                       list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                       function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    Dvmt.3d[ is.na( Dvmt.3d ) ] <- 0\t\t\t\t\n    Hh_$Dvmt.CoIgDtDg[ co, , , ] <<- Dvmt.3d\n    #Hh_$Dvmt.CoIgDtDg[ co, , , ] <- Dvmt.3d\n    \n    # Light Vehicle Dvmt \n    LtVehDvmt.3d <- tapply( SynPop..$LtVehDvmt, \n                            list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                            function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    LtVehDvmt.3d[ is.na( LtVehDvmt.3d ) ] <- 0\t\t\t\t\n    Hh_$LtVehDvmt.CoIgDtDg[ co, , , ] <<- LtVehDvmt.3d\n    #Hh_$LtVehDvmt.CoIgDtDg[ co, , , ] <- Dvmt.3d\n    \n    # Household total cost                                                                     \n    TotCost.Hh <- SynPop..$HhTotCost\n    TotCost.3d <- tapply( TotCost.Hh, \n                          list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                          function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    TotCost.3d[ is.na( TotCost.3d ) ] <- 0\t\t\t\t\n    Hh_$HhOpCost.CoIgDtDg[ co, , , ] <<- TotCost.3d\n    #Hh_$HhOpCost.CoIgDtDg[ co, , , ] <- TotCost.3d\n    \n    # Household external cost                                                                     \n    HhExtCost.Hh <- SynPop..$TotExtCost\n    HhExtCost.3d <- tapply( HhExtCost.Hh, \n                            list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                            function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    HhExtCost.3d[ is.na( HhExtCost.3d ) ] <- 0\t\t\t\t\n    Hh_$HhExtCost.CoIgDtDg[ co, , , ] <<- HhExtCost.3d\n    #Hh_$HhExtCost.CoIgDtDg[ co, , , ] <- HhExtCost.3d\n    \n    # Household vehicle ownership cost                                                                     \n    HhVehOwnCost.Hh <- SynPop..$VehOwnExp\n    HhVehOwnCost.3d <- tapply( HhVehOwnCost.Hh, \n                               list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                               function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    HhVehOwnCost.3d[ is.na( HhVehOwnCost.3d ) ] <- 0\t\t\t\t\n    Hh_$HhVehOwnCost.CoIgDtDg[ co, , , ] <<- HhVehOwnCost.3d\n    #Hh_$HhVehOwnCost.CoIgDtDg[ co, , , ] <- HhVehOwnCost.3d\n    \n    # Household parking cost\n    ParkingCost.Hh <- SynPop..$DailyPkgCost \n    ParkingCost.3d <- tapply( ParkingCost.Hh, \n                              list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                              function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    ParkingCost.3d[ is.na( ParkingCost.3d ) ] <- 0\t\t\t\t                \n    Hh_$HhParkingCost.CoIgDtDg[ co, , , ] <<- ParkingCost.3d\n    #Hh_$HhParkingCost.CoIgDtDg[ co, , , ] <- ParkingCost.3d\n    \n    # Household income\n    HhInc.3d <- tapply( SynPop..$Hhincttl, \n                        list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                        function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    HhInc.3d[ is.na( HhInc.3d ) ] <- 0\t\t\t\t\n    Hh_$HhInc.CoIgDtDg[ co, , , ] <<- HhInc.3d\n    #Hh_$HhInc.CoIgDtDg[ co, , , ] <- HhInc.3d\n    \n    # Household CO2e\n    Co2e.Hh <- SynPop..$FuelCo2e + SynPop..$ElecCo2e   \n    Co2e.3d <- tapply( Co2e.Hh, \n                       list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                       function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    Co2e.3d[ is.na( Co2e.3d ) ] <- 0\t\t\t\t\n    Hh_$HhCo2e.CoIgDtDg[ co, , , ] <<- Co2e.3d\n    #Hh_$HhCo2e.CoIgDtDg[ co, , , ] <- Co2e.3d\n    \n    # Household walk trips\n    AveWalkTrips.3d <- tapply( SynPop..$AveWalkTrips, \n                               list( SynPop..$DevType, DenGroup., SynPop..$Urban ),\n                               function(x) sum( x, na.rm=TRUE ) )[Dt,Dg,Mx]\n    AveWalkTrips.3d[ is.na( AveWalkTrips.3d ) ] <- 0\n    Hh_$WalkTrips.CoDtDgMx[ co, , , ] <<- AveWalkTrips.3d\n    #Hh_$WalkTrips.CoDtDgMx[ co, , , ] <- AveWalkTrips.3d\n    \n    # Household bike trips\n    AveBikeTrips.3d <- tapply( SynPop..$AveBikeTrips, \n                               list( SynPop..$DevType, DenGroup., SynPop..$Urban ),\n                               function(x) sum( x, na.rm=TRUE ) )[Dt,Dg,Mx]\n    AveBikeTrips.3d[ is.na( AveBikeTrips.3d ) ] <- 0\n    Hh_$BikeTrips.CoDtDgMx[ co, , , ] <<- AveBikeTrips.3d\n    #Hh_$BikeTrips.CoDtDgMx[ co, , , ] <- AveBikeTrips.3d\n    \n    # Household transit trips\n    AveTransitTrips.3d <- tapply( SynPop..$AveTransitTrips, \n                               list( SynPop..$DevType, DenGroup., SynPop..$Urban ),\n                               function(x) sum( x, na.rm=TRUE ) )[Dt,Dg,Mx]\n    AveTransitTrips.3d[ is.na( AveTransitTrips.3d ) ] <- 0\n    Hh_$TransitTrips.CoDtDgMx[ co, , , ] <<- AveTransitTrips.3d\n    #Hh_$TransitTrips.CoDtDgMx[ co, , , ] <- AveTransitTrips.3d\n    \n    # Household light weight vehicle (e.g. bicycle) trips\n    LtWtVehDvmt.3d <- tapply( SynPop..$LtVehDvmt, \n                              list( SynPop..$DevType, DenGroup., SynPop..$Urban ),\n                              function(x) sum( x, na.rm=TRUE ) )[Dt,Dg,Mx]\n    LtWtVehDvmt.3d[ is.na( LtWtVehDvmt.3d ) ] <- 0\n    Hh_$LtWtVehDvmt.CoDtDgMx[ co, , , ] <<- LtWtVehDvmt.3d\n    #Hh_$LtWtVehDvmt.CoDtDgMx[ co, , , ] <- LtWtVehDvmt.3d\n    \n    # Fuel consumed by household\n    FuelGallons.Hh <- SynPop..$FuelGallons\n    FuelGallons.3d <- tapply( FuelGallons.Hh, \n                              list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                              function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    FuelGallons.3d[ is.na( FuelGallons.3d ) ] <- 0\t\t\t\t\n    Hh_$FuelGallons.CoIgDtDg[ co, , , ] <<- FuelGallons.3d\n    #Hh_$FuelGallons.CoIgDtDg[ co, , , ] <- FuelGallons.3d\n    \n    # Electricity consumed by household\n    ElecKwh.Hh <- SynPop..$ElecKwh\n    ElecKwh.3d <- tapply( ElecKwh.Hh, \n                          list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                          function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    ElecKwh.3d[ is.na( ElecKwh.3d ) ] <- 0\t\t\t\t\n    Hh_$ElecKwh.CoIgDtDg[ co, , , ] <<- ElecKwh.3d\n    #Hh_$ElecKwh.CoIgDtDg[ co, , , ] <- ElecKwh.3d\n    \n    # Greenhouse gas emissions from fuel consumption\n    FuelCo2e.Hh <- SynPop..$FuelCo2e\n    FuelCo2e.3d <- tapply( FuelCo2e.Hh, \n                           list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                           function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    FuelCo2e.3d[ is.na( FuelCo2e.3d ) ] <- 0\t\t\t\t\n    Hh_$FuelCo2e.CoIgDtDg[ co, , , ] <<- FuelCo2e.3d\n    #Hh_$FuelCo2e.CoIgDtDg[ co, , , ] <- FuelCo2e.3d\n    \n    # Greenhouse gas emissions from electricity consumption\n    ElecCo2e.Hh <- SynPop..$ElecCo2e\n    ElecCo2e.3d <- tapply( ElecCo2e.Hh, \n                           list( SynPop..$IncGrp, SynPop..$DevType, DenGroup. ), \n                           function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    ElecCo2e.3d[ is.na( ElecCo2e.3d ) ] <- 0\t\t\t\t\n    Hh_$ElecCo2e.CoIgDtDg[ co, , , ] <<- ElecCo2e.3d\n    #Hh_$ElecCo2e.CoIgDtDg[ co, , , ] <- ElecCo2e.3d\n    \n    # Carsharing households\n    CarshareHh.3d <- tapply( SynPop..$Carshare, \n                             list( SynPop..$IncGrp,SynPop..$DevType, DenGroup. ), \n                             function(x) sum( x, na.rm=TRUE ) )[Ig,Dt,Dg]\n    CarshareHh.3d[ is.na( CarshareHh.3d ) ] <- 0\t\t\t\t                \n    Hh_$CarshareHh.CoIgDtDg[ co, , , ] <<- CarshareHh.3d\n    #Hh_$CarshareHh.CoIgDtDg[ co, , , ] <- CarshareHh.3d\n    \n    # Median household income\n    Hh_$MedianInc.Co[co] <<- median( SynPop..$Hhincttl )\n    #Hh_$MedianInc.Co[co] <- median( SynPop..$Hhincttl )\n    MedianInc.Dt <- tapply( SynPop..$Hhincttl, SynPop..$DevType, median )[Dt]\n    Hh_$MedianInc.CoDt[co,] <<- MedianInc.Dt\n    #Hh_$MedianInc.CoDt[co,] <- MedianInc.Dt\n    \n    # Tabulate vehicle characteristics\n    #=================================\n    \n    HasVeh.Hh <- SynPop..$Hhvehcnt >= 1   \n    \n    # Tabulate average vehicle age\n    Tab.4d <- tapply( unlist( SynPop..$VehAge[ HasVeh.Hh ] ),\n                      list( rep( SynPop..$IncGrp, SynPop..$Hhvehcnt ), \n                            rep( SynPop..$DevType, SynPop..$Hhvehcnt ),\n                            rep( DenGroup., SynPop..$Hhvehcnt ), \n                            unlist( SynPop..$VehType[HasVeh.Hh] ) ), \n                      mean )[Ig,Dt,Dg,Vt[1:2]]\n    Tab.4d[ is.na( Tab.4d ) ] <- 0\n    Hh_$AveAutoVehAge.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , , \"Auto\" ]\n    Hh_$AveLtTruckVehAge.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , , \"LtTruck\" ]\n    #Hh_$AveAutoVehAge.CoIgDtDg[ co, , , ] <- Tab.4d[ , , , \"Auto\" ]\n    #Hh_$AveLtTruckVehAge.CoIgDtDg[ co, , , ] <- Tab.4d[ , , , \"LtTruck\" ]\n    \n    # Tabulate number of vehicles\n    Tab.4d <- table( rep( SynPop..$IncGrp, SynPop..$Hhvehcnt ),\n                     rep( SynPop..$DevType, SynPop..$Hhvehcnt ), \n                     rep( DenGroup., SynPop..$Hhvehcnt ),\n                     unlist( SynPop..$VehType[ HasVeh.Hh] ) )[Ig,Dt,Dg,Vt[1:2]]\n    Tab.4d[ is.na( Tab.4d ) ] <- 0\n    Hh_$NumAuto.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , , \"Auto\" ]\n    Hh_$NumLtTruck.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , ,\"LtTruck\" ]\n    #Hh_$NumAuto.CoIgDtDg[ co, , , ] <- Tab.4d[ , , , \"Auto\" ]\n    #Hh_$NumLtTruck.CoIgDtDg[ co, , , ] <- Tab.4d[ , , ,\"LtTruck\" ]\n    \n    # Tabulate vehicle DVMT for autos and light trucks\n    # Tabulate EV DVMT by income group, development type, and density group\n    Tab.4d <- tapply( unlist( SynPop..$EvVehDvmt[ HasVeh.Hh ] ),\n                      list( rep( SynPop..$IncGrp, SynPop..$Hhvehcnt ), \n                            rep( SynPop..$DevType, SynPop..$Hhvehcnt ),\n                            rep( DenGroup., SynPop..$Hhvehcnt ), \n                            unlist( SynPop..$VehType[ HasVeh.Hh ] ) ), sum )[Ig,Dt,Dg,Vt[1:2]]\n    Tab.4d[ is.na( Tab.4d ) ] <- 0\n    Hh_$AutoEvDvmt.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , , \"Auto\" ]\n    Hh_$LtTruckEvDvmt.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , ,\"LtTruck\" ]\n    #Hh_$AutoEvDvmt.CoIgDtDg[ co, , , ] <- Tab.4d[ , , , \"Auto\" ]\n    #Hh_$LtTruckEvDvmt.CoIgDtDg[ co, , , ] <- Tab.4d[ , , ,\"LtTruck\" ]\n    \n    # Tabulate HC-vehicle DVMT\n    Tab.4d <- tapply( unlist( SynPop..$HcVehDvmt[ HasVeh.Hh] ),\n                      list( rep( SynPop..$IncGrp, SynPop..$Hhvehcnt ), \n                            rep( SynPop..$DevType, SynPop..$Hhvehcnt ),\n                            rep( DenGroup., SynPop..$Hhvehcnt ),\t\t\t\t     \n                            unlist( SynPop..$VehType[ HasVeh.Hh] ) ), sum )[Ig,Dt,Dg,Vt[1:2]]\n    Tab.4d[ is.na( Tab.4d ) ] <- 0\n    Hh_$AutoHcDvmt.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , , \"Auto\" ]\n    Hh_$LtTruckHcDvmt.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , ,\"LtTruck\" ]\n    #Hh_$AutoHcDvmt.CoIgDtDg[ co, , , ] <- Tab.4d[ , , , \"Auto\" ]\n    #Hh_$LtTruckHcDvmt.CoIgDtDg[ co, , , ] <- Tab.4d[ , , ,\"LtTruck\" ]\n    \n    # Tabulate vehicle fuel (gas vehicle and PHEV)\n    HcVehDvmt. <- unlist( SynPop..$HcVehDvmt[ HasVeh.Hh ] )\n    HcVehDvmt.[ is.na( HcVehDvmt. ) ] <- 0\n    VehMpg. <- unlist( SynPop..$VehMpg[ HasVeh.Hh ] )\n    VehMpg.[ is.na( VehMpg. ) ] <- 0\n    VehFuel. <- HcVehDvmt. / VehMpg.\n    VehFuel.[ is.nan( VehFuel. ) ] <- 0\n    Tab.4d <- tapply( VehFuel., \n                      list( rep( SynPop..$IncGrp, SynPop..$Hhvehcnt ),\n                            rep( SynPop..$DevType, SynPop..$Hhvehcnt), \n                            rep( DenGroup., SynPop..$Hhvehcnt ),\n                            unlist( SynPop..$VehType[ HasVeh.Hh ] ) ), \n                      sum )[Ig,Dt,Dg,Vt[1:2]]\n    Tab.4d[ is.na( Tab.4d ) ] <- 0\n    Hh_$AutoFuel.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , , \"Auto\" ]\n    Hh_$LtTruckFuel.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , ,\"LtTruck\" ]\n    #Hh_$AutoFuel.CoIgDtDg[ co, , , ] <- Tab.4d[ , , , \"Auto\" ]\n    #Hh_$LtTruckFuel.CoIgDtDg[ co, , , ] <- Tab.4d[ , , ,\"LtTruck\" ]\n    \n    # Tabulate vehicle power (PHEV and EV) by income group, development type, and density group\n    EvVehDvmt. <- unlist( SynPop..$EvVehDvmt[ HasVeh.Hh ] )\n    EvVehDvmt.[ is.na( EvVehDvmt. ) ] <- 0\n    VehMpkwh. <- unlist( SynPop..$VehMpkwh[ HasVeh.Hh ] )\n    VehPower. <- EvVehDvmt. / VehMpkwh.\n    VehPower.[ is.na( VehMpkwh. ) ] <- 0\n    Tab.4d <- tapply( VehPower., \n                      list( rep( SynPop..$IncGrp, SynPop..$Hhvehcnt ),\n                            rep( SynPop..$DevType, SynPop..$Hhvehcnt), \n                            rep( DenGroup., SynPop..$Hhvehcnt ),\n                            unlist( SynPop..$VehType[ HasVeh.Hh ] ) ), \n                      sum )[Ig,Dt,Dg,Vt[1:2]]\n    Tab.4d[ is.na( Tab.4d ) ] <- 0\n    Hh_$AutoPower.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , , \"Auto\" ]\n    Hh_$LtTruckPower.CoIgDtDg[ co, , , ] <<- Tab.4d[ , , ,\"LtTruck\" ]\n    #Hh_$AutoPower.CoIgDtDg[ co, , , ] <- Tab.4d[ , , , \"Auto\" ]\n    #Hh_$LtTruckPower.CoIgDtDg[ co, , , ] <- Tab.4d[ , , ,\"LtTruck\" ]\n    \n    # Tabulate automobile and light truck age distributions\n    Tab.2d <- table( unlist( SynPop..$VehAge[ HasVeh.Hh ] ), \n                     unlist( SynPop..$VehType[ HasVeh.Hh ] ) )\n    Hh_$AutoAge.CoAg[ co, rownames( Tab.2d ) ] <<- Tab.2d[ , \"Auto\" ]          \n    Hh_$LtTruckAge.CoAg[ co, rownames( Tab.2d ) ] <<- Tab.2d[ , \"LtTruck\" ]              \n    #Hh_$AutoAge.CoAg[ co, ] <- Tab.2d[ , \"Auto\" ]          \n    #Hh_$LtTruckAge.CoAg[ co, ] <- Tab.2d[ , \"LtTruck\" ]              \n    \n    # Tabulate number of vehicles by powertrain\n    NumPowertrain.DtDgPt <- array( 0, dim=c( length(Dt), length(Dg), length(Pt) ),\n                                   dimnames=list( Dt, Dg, Pt ) ) \n    Tab.3d <- table( rep( SynPop..$DevType[ HasVeh.Hh], SynPop..$Hhvehcnt[ HasVeh.Hh] ), \n                     rep( DenGroup.[ HasVeh.Hh], SynPop..$Hhvehcnt[ HasVeh.Hh] ),\n                     unlist( SynPop..$Powertrain[ HasVeh.Hh] ) )\n    NumPowertrain.DtDgPt[ dimnames( Tab.3d )[[1]], dimnames( Tab.3d )[[2]], dimnames( Tab.3d )[[3]] ] <- Tab.3d \n    Hh_$NumPowertrain.CoDtDgPt[ co, , , ] <<- NumPowertrain.DtDgPt\n    #Hh_$NumPowertrain.CoDtDgPt[ co, , , ] <- Tab.3d\n    \n    # Tabulate number of vehicles by county, vehicle type, vehicle age, and powertrain\n    NumPowertrain.VtAgPt <- array( 0, dim=c( length(Vt), length(Ag), length(Pt) ),\n                                   dimnames=list( Vt, Ag, Pt ) ) \n    Tab.3d <- table( unlist( SynPop..$VehType[HasVeh.Hh] ), \n                     unlist( SynPop..$VehAge[HasVeh.Hh] ), \n                     unlist( SynPop..$Powertrain[HasVeh.Hh] ) )\n    NumPowertrain.VtAgPt[ dimnames( Tab.3d )[[1]], dimnames( Tab.3d )[[2]], dimnames( Tab.3d )[[3]] ] <- Tab.3d \n    Hh_$NumPowertrain.CoVtAgPt[ co, , , ] <<- NumPowertrain.VtAgPt\n    #Hh_$NumPowertrain.CoVtAgPt[ co, , , ] <- Tab.3d\n    \n    # Tabulate number of vehicles by vehicle type and powertrain\n    NumPowertrain.VtPt <- array( 0, dim=c( length(Vt), length(Pt) ), dimnames=list( Vt, Pt ) )\n    Tab.2d <- table( unlist( SynPop..$VehType[ HasVeh.Hh ] ), \n                     unlist( SynPop..$Powertrain[ HasVeh.Hh ] ) )\n    NumPowertrain.VtPt[ dimnames( Tab.2d )[[1]], dimnames( Tab.2d )[[2]] ] <- Tab.2d\n    Hh_$NumPowertrain.CoVtPt[ co, , ] <<- NumPowertrain.VtPt\n    #Hh_$NumPowertrain.CoVtPt[ co, , ] <- NumPowertrain.VtPt\n    \n    # Tabulate VMT powered by hydrocarbon fuels by vehicle type and powertrain\n    HcDvmt.VtPt <- array( 0, dim=c( length(Vt), length(Pt) ), dimnames=list( Vt, Pt ) )\n    Tab.2d <- tapply( unlist( SynPop..$HcVehDvmt[ HasVeh.Hh ] ), \n                      list( unlist( SynPop..$VehType[ HasVeh.Hh ] ), \n                            unlist( SynPop..$Powertrain[ HasVeh.Hh ] ) ), \n                      sum ) \n    HcDvmt.VtPt[ dimnames( Tab.2d )[[1]], dimnames( Tab.2d )[[2]] ] <- Tab.2d\n    Hh_$HcDvmt.CoVtPt[ co, , ] <<- HcDvmt.VtPt\n    #Hh_$HcDvmt.CoVtPt[ co, , ] <- HcDvmt.VtPt\n    \n    # Tabulate VMT powered by electricity by vehicle type and powertrain \n    EvDvmt.VtPt <- array( 0, dim=c( length(Vt), length(Pt) ), dimnames=list( Vt, Pt ) )\n    Tab.2d <- tapply( unlist( SynPop..$EvVehDvmt[ HasVeh.Hh ] ), \n                      list( unlist( SynPop..$VehType[ HasVeh.Hh ] ), \n                            unlist( SynPop..$Powertrain[ HasVeh.Hh ] ) ), \n                      sum ) \n    EvDvmt.VtPt[ dimnames( Tab.2d )[[1]], dimnames( Tab.2d )[[2]] ] <- Tab.2d\n    Hh_$EvDvmt.CoVtPt[ co, , ] <<- EvDvmt.VtPt\n    #Hh_$EvDvmt.CoVtPt[ co, , ] <- EvDvmt.VtPt\n    \n    # Tabulate fuel consumed by vehicle type and powertrain \n    Fuel.VtPt <- array( 0, dim=c( length(Vt), length(Pt) ), dimnames=list( Vt, Pt ) )\n    Tab.2d <- tapply( unlist( SynPop..$HcVehDvmt[ HasVeh.Hh ] ) / unlist( SynPop..$VehMpg[ HasVeh.Hh ] ), \n                      list( unlist( SynPop..$VehType[ HasVeh.Hh ] ), \n                            unlist( SynPop..$Powertrain[ HasVeh.Hh ] ) ), \n                      sum )\n    Tab.2d[ is.na( Tab.2d ) ] <- 0 \n    Fuel.VtPt[ dimnames( Tab.2d )[[1]], dimnames( Tab.2d )[[2]] ] <- Tab.2d\n    Hh_$Fuel.CoVtPt[ co, , ] <<- Fuel.VtPt\n    #Hh_$Fuel.CoVtPt[ co, , ] <- Fuel.VtPt\n    \n    # Tabulate the VMT powered by hydrocarbon fuels by powertrain\n    HcDvmt.DtDgPt <- array( 0, dim=c( length(Dt), length(Dg), length(Pt) ),\n                            dimnames=list( Dt, Dg, Pt ) ) \n    HcVehDvmt. <- unlist( SynPop..$HcVehDvmt[ HasVeh.Hh ] )\n    HcVehDvmt.[ is.na( HcVehDvmt. ) ] <- 0\n    Tab.3d <- tapply( HcVehDvmt., \n                      list( rep( SynPop..$DevType, SynPop..$Hhvehcnt ),\n                            rep( DenGroup., SynPop..$Hhvehcnt ), \n                            unlist( SynPop..$Powertrain[ HasVeh.Hh ] ) ), \n                      sum )\n    HcDvmt.DtDgPt[ dimnames( Tab.3d )[[1]], dimnames( Tab.3d )[[2]], dimnames( Tab.3d )[[3]] ] <- Tab.3d\n    HcDvmt.DtDgPt[ is.na( HcDvmt.DtDgPt ) ] <- 0\n    Hh_$HcDvmt.CoDtDgPt[ co, , , ] <<- HcDvmt.DtDgPt\n    #Hh_$HcDvmt.CoDtDgPt[ co, , , ] <- HcDvmt.DtDgPt\n    \n    # Tabulate the VMT powered by electricity by powertrain\n    EvDvmt.DtDgPt <- array( 0, dim=c( length(Dt), length(Dg), length(Pt) ),\n                            dimnames=list( Dt, Dg, Pt ) ) \n    EvVehDvmt. <- unlist( SynPop..$EvVehDvmt[ HasVeh.Hh ] )\n    EvVehDvmt.[ is.na( EvVehDvmt. ) ] <- 0\n    Tab.3d <- tapply( EvVehDvmt., \n                      list( rep( SynPop..$DevType, SynPop..$Hhvehcnt ),\n                            rep( DenGroup., SynPop..$Hhvehcnt ),\n                            unlist( SynPop..$Powertrain[ HasVeh.Hh ] ) ), \n                      sum )\n    EvDvmt.DtDgPt[ dimnames( Tab.3d )[[1]], dimnames( Tab.3d )[[2]], dimnames( Tab.3d )[[3]] ] <- Tab.3d\n    EvDvmt.DtDgPt[ is.na( EvDvmt.DtDgPt ) ] <- 0\n    Hh_$EvDvmt.CoDtDgPt[ co, , , ] <<- EvDvmt.DtDgPt\n    #Hh_$EvDvmt.CoDtDgPt[ co, , , ] <- EvDvmt.DtDgPt\n    \n    # Tabulate the gallons of hydrocarbon fuels consumed by powertrain\n    Fuel.DtDgPt <- array( 0, dim=c( length(Dt), length(Dg), length(Pt) ),\n                          dimnames=list( Dt, Dg, Pt ) )\n    HcVehDvmt. <- unlist( SynPop..$HcVehDvmt[ HasVeh.Hh ] )\n    HcVehDvmt.[ is.na( HcVehDvmt. ) ] <- 0\n    VehMpg. <- unlist( SynPop..$VehMpg[ HasVeh.Hh ] )\n    VehMpg.[ is.na( VehMpg. ) ] <- 0\n    VehFuel. <- HcVehDvmt. / VehMpg.\n    VehFuel.[ is.nan( VehFuel. ) ] <- 0\n    Tab.3d <- tapply( VehFuel., \n                      list( rep( SynPop..$DevType, SynPop..$Hhvehcnt ),\n                            rep( DenGroup., SynPop..$Hhvehcnt ),\n                            unlist( SynPop..$Powertrain[ HasVeh.Hh ] ) ), \n                      sum )\n    Fuel.DtDgPt[ dimnames( Tab.3d )[[1]], dimnames( Tab.3d )[[2]], dimnames( Tab.3d )[[3]] ] <- Tab.3d\n    Fuel.DtDgPt[ is.na( Fuel.DtDgPt ) ] <- 0 \t\t\t\n    Hh_$Fuel.CoDtDgPt[ co, , , ] <<- Fuel.DtDgPt\n    #Hh_$Fuel.CoDtDgPt[ co, , , ] <- Fuel.DtDgPt\n    \n    # Tabulate the auto and light truck hydrocarbon CO2e emissions by vehicle age\n    VehType. <- unlist( SynPop..$VehType )\n    VehAge. <- unlist( SynPop..$VehAge )\n    HcVehDvmt. <- unlist( SynPop..$HcVehDvmt )\n    HcVehCo2e. <- Hh_$AveFuelCo2e.[ VehType. ] * ( HcVehDvmt. / unlist( SynPop..$VehMpg ) )\n    HcVehDvmt.2d <- tapply( HcVehDvmt., list( VehAge., VehType. ), function(x) sum(x, na.rm=TRUE) )\n    HcVehDvmt.AgVt <- array( 0, dim=c(length(Ag),length(Vt)), dimnames=list(Ag,Vt) )\n    HcVehDvmt.AgVt[ dimnames( HcVehDvmt.2d )[[1]], dimnames( HcVehDvmt.2d )[[2]] ] <- HcVehDvmt.2d\n    HcVehDvmt.AgVt[is.na(HcVehDvmt.AgVt)] <- 0\n    HcVehCo2e.2d <- tapply( HcVehCo2e., list( VehAge., VehType. ), function(x) sum(x, na.rm=TRUE) )\n    HcVehCo2e.AgVt <- array( 0, dim=c(length(Ag),length(Vt)), dimnames=list(Ag,Vt) )\n    HcVehCo2e.AgVt[ dimnames( HcVehCo2e.2d )[[1]], dimnames( HcVehCo2e.2d )[[2]] ] <- HcVehCo2e.2d\n    HcVehCo2e.AgVt[is.na(HcVehCo2e.AgVt)] <- 0\n    Hh_$HcVehDvmt.CoAgVt[ co, , ] <<- HcVehDvmt.AgVt\n    Hh_$HcVehCo2e.CoAgVt[ co, , ] <<- HcVehCo2e.AgVt\n    #Hh_$HcVehDvmt.CoAgVt[ co, , ] <- HcVehDvmt.AgVt\n    #Hh_$HcVehCo2e.CoAgVt[ co, , ] <- HcVehCo2e.AgVt\n    \n    # Tabulate the auto and light truck electric vehicle CO2e emissions by vehicle age\n    EvVehDvmt. <- unlist( SynPop..$EvVehDvmt )\n    EvVehCo2e. <- Hh_$AveElectricCo2e.Co[co] * ( EvVehDvmt. / unlist( SynPop..$VehMpkwh ) )\n    EvVehDvmt.2d <- tapply( EvVehDvmt., list( VehAge., VehType. ), function(x) sum(x, na.rm=TRUE) )\n    EvVehDvmt.AgVt <- array( 0, dim=c(length(Ag),length(Vt)), dimnames=list(Ag,Vt) )\n    EvVehDvmt.AgVt[ dimnames( EvVehDvmt.2d )[[1]], dimnames( EvVehDvmt.2d )[[2]] ] <- EvVehDvmt.2d\n    EvVehDvmt.AgVt[is.na(EvVehDvmt.AgVt)] <- 0\n    EvVehCo2e.2d <- tapply( EvVehCo2e., list( VehAge., VehType. ), function(x) sum(x, na.rm=TRUE) )\n    EvVehCo2e.AgVt <- array( 0, dim=c(length(Ag),length(Vt)), dimnames=list(Ag,Vt) )\n    EvVehCo2e.AgVt[ dimnames( EvVehCo2e.2d )[[1]], dimnames( EvVehCo2e.2d )[[2]] ] <- EvVehCo2e.2d\n    EvVehCo2e.AgVt[is.na(EvVehCo2e.AgVt)] <- 0\n    Hh_$EvVehDvmt.CoAgVt[ co, , ] <<- EvVehDvmt.AgVt\n    Hh_$EvVehCo2e.CoAgVt[ co, , ] <<- EvVehCo2e.AgVt\n    #Hh_$EvVehDvmt.CoAgVt[ co, , ] <- EvVehDvmt.AgVt\n    #Hh_$EvVehCo2e.CoAgVt[ co, , ] <- EvVehCo2e.AgVt\n    \n    # Close local function\n  } ) \n  \n  gc()\n  \n  # Close loop through counties \t\n  }\n  \n  #Save the results\n  #================\n  \n  Filename <- paste( OutputYearDir, \"/\", \"Hh_.RData\", sep=\"\" )\n  save( Hh_, file=Filename )\n  Filename <- paste( OutputYearDir, \"/\", \"Inputs_.RData\", sep=\"\" )\n  save( Inputs_, file=Filename )\n  Filename <- paste( OutputYearDir, \"/\", \"Model_.RData\", sep=\"\" )\n  save( Model_, file=Filename )\n  Filename <- paste( OutputYearDir, \"/\", \"Metropolitan_.RData\", sep=\"\" )\n  save( Metropolitan_, file=Filename )\n  \n  #End the loop through years\n  #==========================\n  \n  print( Sys.time() )\n  \n}\nrm( Hh_ )\n\n\n",
    "created" : 1482079168233.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "524370535",
    "id" : "C0BAC176",
    "lastKnownWriteTime" : 1482160993,
    "last_content_update" : 1482160993802,
    "path" : "~/GitHub/GreenSTEP/Version_3.6/Example/scripts/GreenSTEP_Sim_Outputs.r",
    "project_path" : "scripts/GreenSTEP_Sim_Outputs.r",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}